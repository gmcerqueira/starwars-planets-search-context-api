{"version":3,"sources":["context/PlanetsContext.jsx","components/filters/FilterByName.jsx","components/filters/FilterByNumber.jsx","components/filters/ColumnOrder.jsx","components/filters/DataOptions.jsx","components/filters/FiltersInUse.jsx","components/table/TableBody.jsx","services/auxFuncs.jsx","components/table/TableHeader.jsx","components/table/DataTable.jsx","context/PlanetsProvider.jsx","App.js","index.js"],"names":["PlanetsContext","createContext","FilterByName","handleNameInput","useContext","Form","Group","Control","placeholder","aria-label","aria-describedby","onChange","data-testid","FilterByNumber","saveFilter","returnAlreadyUsedFilter","useEffect","renderOptions","options","map","option","key","value","columnOptions","Object","entries","population","orbital_period","diameter","rotation_period","surface_water","filter","comparisonOptions","columnSelector","createRef","comparisonSelector","valueSelector","className","Label","Select","ref","type","Button","variant","onClick","current","ColumnOrder","setSort","useState","column","sort","order","setOrder","target","name","Check","defaultChecked","label","id","DataOptions","Accordion","flush","Item","eventKey","Header","Body","FiltersInUse","filterNumber","filters","removeFilterNumber","length","index","comparison","Badge","bg","CloseButton","TableBody","data","filteringByName","returnFromFilter","formatDate","date","match","split","reverse","join","planet","a","b","sortByName","parseFloat","sortByValues","rotationPeriod","orbitalPeriod","climate","gravity","terrain","surfaceWater","films","created","edited","url","film","i","Alert","Link","href","TableHeader","DataTable","Table","striped","hover","PlanetsProvider","children","setData","filterName","setFilterName","setFilterNumber","fetchPlanets","fetch","then","res","json","results","planets","context","Number","toLowerCase","includes","comparisonValue","reduce","acc","curr","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ebfc30c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useContext } from 'react';\nimport { Form } from 'react-bootstrap';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst FilterByName = () => {\n  const { handleNameInput } = useContext(PlanetsContext);\n  return (\n\n    <Form>\n      <Form.Group>\n        <Form.Control\n          placeholder=\"Planet name\"\n          aria-label=\"Planet name\"\n          aria-describedby=\"Search by planet name\"\n          onChange={ handleNameInput }\n          data-testid=\"name-filter\"\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default FilterByName;\n","import React, { createRef, useContext, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst FilterByNumber = () => {\n  const { saveFilter, returnAlreadyUsedFilter } = useContext(PlanetsContext);\n\n  useEffect(() => {}, []);\n\n  const renderOptions = (options) => options.map((option) => (\n    <option key={ option[0] } value={ option[0] }>\n      {option[1]}\n    </option>\n  ));\n\n  const columnOptions = Object.entries({\n    population: 'Population',\n    orbital_period: ' Orbital period',\n    diameter: 'Diameter',\n    rotation_period: 'Rotation period',\n    surface_water: 'Surface water',\n  }).filter((option) => returnAlreadyUsedFilter(option[0]));\n\n  const comparisonOptions = Object.entries({\n    'greater then': 'greater then',\n    'less then': 'less then',\n    'equals to': 'equals to',\n  });\n  const columnSelector = createRef();\n  const comparisonSelector = createRef();\n  const valueSelector = createRef();\n\n  return (\n    <Form>\n      <Form.Group className=\"mb-2\">\n        <Form.Label>Column</Form.Label>\n        <Form.Select\n          ref={ columnSelector }\n          aria-label=\"Column filter select\"\n          data-testid=\"column-filter\"\n        >\n          {renderOptions(columnOptions)}\n        </Form.Select>\n      </Form.Group>\n\n      <Form.Group className=\"mb-2\">\n        <Form.Label>Compare</Form.Label>\n        <Form.Select\n          ref={ comparisonSelector }\n          aria-label=\"Comparasion filter select\"\n          data-testid=\"comparison-filter\"\n        >\n          {renderOptions(comparisonOptions)}\n        </Form.Select>\n      </Form.Group>\n\n      <Form.Group className=\"mb-2\">\n        <Form.Label>Value</Form.Label>\n        <Form.Control\n          type=\"number\"\n          placeholder=\"Value to compare\"\n          aria-label=\"Value to compare\"\n          aria-describedby=\"Value filter input\"\n          ref={ valueSelector }\n          data-testid=\"name-filter\"\n        />\n      </Form.Group>\n\n      <Button\n        variant=\"secondary\"\n        data-testid=\"button-filter\"\n        onClick={ () => saveFilter(\n          columnSelector.current.value,\n          comparisonSelector.current.value,\n          valueSelector.current.value,\n        ) }\n      >\n        Add\n      </Button>\n    </Form>\n  );\n};\n\nexport default FilterByNumber;\n","import React, { useContext, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst ColumnOrder = () => {\n  const { setSort } = useContext(PlanetsContext);\n  const [order, setOrder] = useState({ column: 'name', sort: 'ASC' });\n\n  const handleColumnSortChange = (column) => {\n    setOrder({ ...order, column });\n  };\n\n  const handleWaySortChange = (sort) => {\n    setOrder({ ...order, sort });\n  };\n  const options = {\n    name: 'Name',\n    population: 'Population',\n    orbital_period: ' Orbital period',\n    diameter: 'Diameter',\n    rotation_period: 'Rotation period',\n    surface_water: 'Surface water',\n  };\n\n  return (\n    <Form.Group>\n      <Form.Select\n        aria-label=\"Column to sort\"\n        data-testid=\"column-sort\"\n        onChange={ ({ target: { value } }) => handleColumnSortChange(value) }\n      >\n        {Object.entries(options).map((option) => (\n          <option key={ option[0] } value={ option[0] }>\n            {option[1]}\n          </option>\n        ))}\n      </Form.Select>\n      <div\n        className=\"radioChange\"\n        onChange={ ({ target: { value } }) => handleWaySortChange(value) }\n      >\n        <Form.Check\n          type=\"radio\"\n          defaultChecked\n          label=\"Ascendente\"\n          value=\"ASC\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios1\"\n        />\n        <Form.Check\n          type=\"radio\"\n          label=\"Descendente\"\n          value=\"DESC\"\n          name=\"formHorizontalRadios\"\n          id=\"formHorizontalRadios2\"\n        />\n      </div>\n\n      <Button\n        variant=\"secondary\"\n        type=\"button\"\n        onClick={ () => {\n          setSort(order);\n        } }\n        data-testid=\"column-sort-button\"\n      >\n        Sort\n      </Button>\n    </Form.Group>\n  );\n};\n\nexport default ColumnOrder;\n","import React from 'react';\nimport { Accordion } from 'react-bootstrap';\nimport FilterByName from './FilterByName';\nimport FilterByNumber from './FilterByNumber';\nimport '../../style/test.css';\nimport ColumnOrder from './ColumnOrder';\n\nconst DataOptions = () => (\n  <Accordion flush>\n    <Accordion.Item eventKey=\"0\">\n      <Accordion.Header>Name</Accordion.Header>\n      <Accordion.Body>\n        <FilterByName />\n      </Accordion.Body>\n    </Accordion.Item>\n    <Accordion.Item eventKey=\"1\">\n      <Accordion.Header>Comparison</Accordion.Header>\n      <Accordion.Body>\n        <FilterByNumber />\n      </Accordion.Body>\n    </Accordion.Item>\n    <Accordion.Item eventKey=\"2\">\n      <Accordion.Header>Sort</Accordion.Header>\n      <Accordion.Body>\n        <ColumnOrder />\n      </Accordion.Body>\n    </Accordion.Item>\n  </Accordion>\n);\n\nexport default DataOptions;\n","import React, { useContext } from 'react';\nimport { Badge, CloseButton } from 'react-bootstrap';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst FiltersInUse = () => {\n  const {\n    filters: { filterNumber },\n    removeFilterNumber,\n  } = useContext(PlanetsContext);\n  return (\n    <div>\n      {filterNumber.length > 0\n        && (\n          <div>\n            <h2>\n              Filters in use\n            </h2>\n            {filterNumber.map(({ column, comparison, value }, index) => (\n              <div key={ column } data-testid=\"filter\">\n                <Badge bg=\"secondary\">\n                  {`${column} ${comparison} ${value}`}\n                  <CloseButton\n                    variant=\"white\"\n                    onClick={ () => removeFilterNumber(index) }\n                  />\n                </Badge>\n              </div>\n            ))}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default FiltersInUse;\n","import React, { useContext } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport PlanetsContext from '../../context/PlanetsContext';\nimport { sortByName, sortByValues } from '../../services/auxFuncs';\n\nconst TableBody = () => {\n  const {\n    data,\n    filteringByName,\n    returnFromFilter,\n    filters: { sort },\n  } = useContext(PlanetsContext);\n\n  const formatDate = (date) => (\n    <>\n      <div>{date.match(/\\d*:\\d*/)}</div>\n      <div>{date.match(/^\\d*-\\d*-\\d*/)[0].split('-').reverse().join('/')}</div>\n    </>\n  );\n\n  return (\n    <tbody>\n      {data\n        && data\n          .filter((planet) => filteringByName(planet))\n          .filter((planet) => returnFromFilter(planet))\n          .sort((a, b) => {\n            const { column } = sort;\n            if (column === 'name') return sortByName(a, b, sort);\n            return sortByValues(a, b, sort);\n          })\n          .map(\n            ({\n              name,\n              rotation_period: rotationPeriod,\n              orbital_period: orbitalPeriod,\n              diameter,\n              climate,\n              gravity,\n              terrain,\n              surface_water: surfaceWater,\n              population,\n              films,\n              created,\n              edited,\n              url,\n            }) => (\n              <tr key={ name }>\n                <td data-testid=\"planet-name\">{name}</td>\n                <td>{rotationPeriod}</td>\n                <td>{orbitalPeriod}</td>\n                <td>{diameter}</td>\n                <td>{climate}</td>\n                <td>{gravity}</td>\n                <td>{terrain}</td>\n                <td>{surfaceWater}</td>\n                <td>{population}</td>\n                <td>\n                  {films.map((film, i) => (\n                    <Alert key={ i } variant=\"dark\" className=\"my-2 p-2\">\n                      <Alert.Link href={ film } target=\"_blank\">{i + 1}</Alert.Link>\n                    </Alert>\n                  ))}\n                </td>\n                <td>{formatDate(created)}</td>\n                <td>{formatDate(edited)}</td>\n                <td>\n                  <Alert variant=\"dark\" className=\"my-1\">\n                    <Alert.Link href={ url } target=\"_blank\">Link</Alert.Link>\n                  </Alert>\n                </td>\n              </tr>\n            ),\n          )}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n","const falseReturn = -1;\nexport const sortByName = (a, b, order) => {\n  const { column, sort } = order;\n  if (sort === 'ASC') {\n    if (a[column] < b[column]) {\n      return falseReturn;\n    }\n    if (a[column] > b[column]) {\n      return 1;\n    }\n  }\n  if (sort === 'DESC') {\n    if (a[column] > b[column]) {\n      return falseReturn;\n    }\n    if (a[column] < b[column]) {\n      return 1;\n    }\n  }\n};\n\nexport const sortByValues = (a, b, order) => {\n  const { column, sort } = order;\n  if (sort === 'ASC') {\n    if (parseFloat(a[column]) < parseFloat(b[column])) {\n      return falseReturn;\n    }\n    if (parseFloat(a[column]) > parseFloat(b[column])) {\n      return 1;\n    }\n  }\n\n  if (sort === 'DESC') {\n    if (parseFloat(a[column]) > parseFloat(b[column])) {\n      return falseReturn;\n    }\n    if (parseFloat(a[column]) < parseFloat(b[column])) {\n      return 1;\n    }\n  }\n};\n","import React from 'react';\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Rotation period</th>\n      <th>Orbital period</th>\n      <th>Diameter</th>\n      <th>Climate</th>\n      <th>Gravity</th>\n      <th>Terrain</th>\n      <th>Surface water</th>\n      <th>Population</th>\n      <th>Films</th>\n      <th>Created</th>\n      <th>Edited</th>\n      <th>Url</th>\n    </tr>\n  </thead>\n);\n\nexport default TableHeader;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport TableBody from './TableBody';\nimport TableHeader from './TableHeader';\n\nconst DataTable = () => (\n  <Table\n    striped\n    hover\n    variant=\"dark\"\n    className=\"text-center text-capitalize align-middle overflow-auto my-0\"\n  >\n    <TableHeader />\n    <TableBody />\n  </Table>\n);\n\nexport default DataTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\n\nconst PlanetsProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterNumber, setFilterNumber] = useState([]);\n  const [sort, setSort] = useState({ column: 'name', sort: 'ASC' });\n\n  const fetchPlanets = async () => {\n    const PLANETS_URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const planets = await fetch(PLANETS_URL)\n      .then((res) => res.json())\n      .then(({ results }) => results);\n\n    setData(planets);\n  };\n\n  const handleNameInput = ({ target }) => {\n    setFilterName(target.value);\n  };\n\n  const saveFilter = (column, comparison, value) => {\n    setFilterNumber([\n      ...filterNumber,\n      { column, comparison, value: Number(value) },\n    ]);\n  };\n\n  const filteringByName = (planet) => (filterName\n    ? planet.name.toLowerCase().includes(filterName.toLowerCase())\n    : planet);\n\n  const returnFromFilter = (planet) => {\n    if (filterNumber.length === 0) return planet;\n    const filter = filterNumber[filterNumber.length - 1];\n    const { column, comparison, value } = filter;\n    const comparisonValue = Number(planet[column]);\n\n    switch (comparison) {\n    case 'greater then':\n      return comparisonValue > value;\n\n    case 'less then':\n      return comparisonValue < value;\n\n    case 'equals to':\n      return comparisonValue === value;\n\n    default:\n      return planet;\n    }\n  };\n\n  const returnAlreadyUsedFilter = (option) => {\n    const used = filterNumber.reduce((acc, curr) => [...acc, curr.column], []);\n\n    return !used.includes(option);\n  };\n\n  const removeFilterNumber = (index) => {\n    setFilterNumber(filterNumber.filter((filter, i) => i !== index));\n    // console.log(filterNumber.filter((filter, i) => i !== index));\n  };\n\n  useEffect(() => {\n    fetchPlanets();\n  }, []);\n\n  const context = {\n    data,\n    filters: {\n      filterName,\n      filterNumber,\n      sort,\n    },\n    setFilterName,\n    handleNameInput,\n    saveFilter,\n    filteringByName,\n    returnFromFilter,\n    returnAlreadyUsedFilter,\n    removeFilterNumber,\n    setSort,\n  };\n  return (\n    <PlanetsContext.Provider value={ context }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n};\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PlanetsProvider;\n","import React from 'react';\nimport './App.css';\nimport DataOptions from './components/filters/DataOptions';\nimport FiltersInUse from './components/filters/FiltersInUse';\nimport DataTable from './components/table/DataTable';\nimport PlanetsProvider from './context/PlanetsProvider';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <div className=\"text-center mt-3 mb-5\">\n        <h1>START WARS</h1>\n        <h2>Planets search</h2>\n      </div>\n      <div className=\"d-flex\">\n        <div className=\"w-25\">\n          <DataOptions />\n          <FiltersInUse />\n        </div>\n        <DataTable />\n      </div>\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}