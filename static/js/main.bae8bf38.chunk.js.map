{"version":3,"sources":["context/PlanetsContext.jsx","components/filters/FilterByName.jsx","components/filters/FilterByNumber.jsx","components/filters/DataFilters.jsx","components/filters/FiltersInUse.jsx","components/table/TableBody.jsx","components/table/TableHeader.jsx","components/table/DataTable.jsx","context/PlanetsProvider.jsx","App.js","index.js"],"names":["PlanetsContext","createContext","FilterByName","handleNameInput","useContext","htmlFor","type","name","id","onChange","data-testid","FilterByNumber","saveFilter","returnAlreadyUsedFilter","useEffect","renderOptions","options","map","option","key","value","columnOptions","filter","columnSelector","createRef","comparisonSelector","valueSelector","ref","onClick","current","DataFilters","FiltersInUse","filterNumber","filters","removeFilterNumber","index","column","comparison","TableBody","data","filteringByName","returnFromFilter","planet","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","films","created","edited","url","TableHeader","DataTable","PlanetsProvider","children","useState","setData","filterName","setFilterName","setFilterNumber","fetchPlanets","a","fetch","then","res","json","results","planets","context","target","Number","toLowerCase","includes","length","comparisonValue","reduce","acc","curr","i","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bae8bf38.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst FilterByName = () => {\n  const { handleNameInput } = useContext(PlanetsContext);\n  return (\n    <label htmlFor=\"filterName\">\n      Name:\n      <input\n        type=\"text\"\n        name=\"filterName\"\n        id=\"filterName\"\n        onChange={ handleNameInput }\n        data-testid=\"name-filter\"\n      />\n    </label>\n  );\n};\n\nexport default FilterByName;\n","import React, { createRef, useContext, useEffect } from 'react';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst FilterByNumber = () => {\n  const { saveFilter, returnAlreadyUsedFilter } = useContext(PlanetsContext);\n\n  useEffect(() => {\n  }, []);\n\n  const renderOptions = (options) => options.map((option) => (\n    <option key={ option } value={ option }>\n      {option}\n    </option>\n  ));\n\n  const columnOptions = [\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ].filter((option) => returnAlreadyUsedFilter(option));\n\n  const comparisonOptions = ['maior que', 'menor que', 'igual a'];\n  const columnSelector = createRef();\n  const comparisonSelector = createRef();\n  const valueSelector = createRef();\n\n  return (\n    <div>\n      <label htmlFor=\"column-filter\">\n        Column:\n        <select\n          name=\"column-filter\"\n          id=\"column-filter\"\n          ref={ columnSelector }\n          data-testid=\"column-filter\"\n        >\n          {renderOptions(columnOptions)}\n        </select>\n      </label>\n\n      <label htmlFor=\"comparison-filter\">\n        Comparison:\n        <select\n          name=\"comparison-filter\"\n          id=\"comparison-filter\"\n          ref={ comparisonSelector }\n          data-testid=\"comparison-filter\"\n        >\n          {renderOptions(comparisonOptions)}\n        </select>\n      </label>\n\n      <label htmlFor=\"value-filter\">\n        Value:\n        <input\n          type=\"number\"\n          name=\"value-filter\"\n          id=\"value-filter\"\n          ref={ valueSelector }\n          data-testid=\"value-filter\"\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ () => saveFilter(\n          columnSelector.current.value,\n          comparisonSelector.current.value,\n          valueSelector.current.value,\n        ) }\n      >\n        Add filter\n      </button>\n    </div>\n  );\n};\n\nexport default FilterByNumber;\n","import React from 'react';\nimport FilterByName from './FilterByName';\nimport FilterByNumber from './FilterByNumber';\n\nconst DataFilters = () => (\n  <div>\n    <FilterByName />\n    <FilterByNumber />\n  </div>\n);\n\nexport default DataFilters;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst FiltersInUse = () => {\n  const {\n    filters: { filterNumber },\n    removeFilterNumber,\n  } = useContext(PlanetsContext);\n  return (\n    <div>\n      {filterNumber\n        && filterNumber.map(({ column, comparison, value }, index) => (\n          <div key={ column } data-testid=\"filter\">\n            {`${column} ${comparison} ${value}`}\n            <button type=\"button\" onClick={ () => removeFilterNumber(index) }>X</button>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default FiltersInUse;\n","import React, { useContext } from 'react';\nimport PlanetsContext from '../../context/PlanetsContext';\n\nconst TableBody = () => {\n  const {\n    data,\n    filteringByName,\n    returnFromFilter,\n  } = useContext(PlanetsContext);\n\n  return (\n    <tbody>\n      {data\n        && data\n          .filter((planet) => (filteringByName(planet)))\n          .filter((planet) => (returnFromFilter(planet)))\n          .map(\n            ({\n              name,\n              rotation_period: rotationPeriod,\n              orbital_period: orbitalPeriod,\n              diameter,\n              climate,\n              gravity,\n              terrain,\n              surface_water: surfaceWater,\n              population,\n              films,\n              created,\n              edited,\n              url,\n            }) => (\n              <tr key={ name }>\n                <td>{name}</td>\n                <td>{rotationPeriod}</td>\n                <td>{orbitalPeriod}</td>\n                <td>{diameter}</td>\n                <td>{climate}</td>\n                <td>{gravity}</td>\n                <td>{terrain}</td>\n                <td>{surfaceWater}</td>\n                <td>{population}</td>\n                <td>{films}</td>\n                <td>{created}</td>\n                <td>{edited}</td>\n                <td>{url}</td>\n              </tr>\n            ),\n          )}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n","import React from 'react';\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Rotation period</th>\n      <th>Orbital period</th>\n      <th>Diameter</th>\n      <th>Climate</th>\n      <th>Gravity</th>\n      <th>Terrain</th>\n      <th>Surface water</th>\n      <th>Population</th>\n      <th>Films</th>\n      <th>Created</th>\n      <th>Edited</th>\n      <th>Url</th>\n    </tr>\n  </thead>\n);\n\nexport default TableHeader;\n","import React from 'react';\nimport TableBody from './TableBody';\nimport TableHeader from './TableHeader';\n\nconst DataTable = () => (\n  <table>\n    <TableHeader />\n    <TableBody />\n  </table>\n);\n\nexport default DataTable;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\n\nconst PlanetsProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [filterNumber, setFilterNumber] = useState([]);\n\n  const fetchPlanets = async () => {\n    const PLANETS_URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const planets = await fetch(PLANETS_URL)\n      .then((res) => res.json())\n      .then(({ results }) => results);\n\n    setData(planets);\n  };\n\n  const handleNameInput = ({ target }) => {\n    setFilterName(target.value);\n  };\n\n  const saveFilter = (column, comparison, value) => {\n    setFilterNumber([\n      ...filterNumber,\n      { column, comparison, value: Number(value) },\n    ]);\n  };\n\n  const filteringByName = (planet) => (filterName\n    ? planet.name.toLowerCase().includes(filterName.toLowerCase())\n    : planet);\n\n  const returnFromFilter = (planet) => {\n    if (filterNumber.length === 0) return planet;\n    const filter = filterNumber[filterNumber.length - 1];\n    const { column, comparison, value } = filter;\n    const comparisonValue = Number(planet[column]);\n\n    switch (comparison) {\n    case 'maior que':\n      return comparisonValue > value;\n\n    case 'menor que':\n      return comparisonValue < value;\n\n    case 'igual a':\n      return comparisonValue === value;\n\n    default:\n      return planet;\n    }\n  };\n\n  const returnAlreadyUsedFilter = (option) => {\n    const used = filterNumber.reduce((acc, curr) => [...acc, curr.column], []);\n\n    return !used.includes(option);\n  };\n\n  const removeFilterNumber = (index) => {\n    setFilterNumber(filterNumber.filter((filter, i) => i !== index));\n    // console.log(filterNumber.filter((filter, i) => i !== index));\n  };\n\n  useEffect(() => {\n    fetchPlanets();\n  }, []);\n\n  const context = {\n    data,\n    filters: {\n      filterName,\n      filterNumber,\n    },\n    setFilterName,\n    handleNameInput,\n    saveFilter,\n    filteringByName,\n    returnFromFilter,\n    returnAlreadyUsedFilter,\n    removeFilterNumber,\n  };\n  return (\n    <PlanetsContext.Provider value={ context }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n};\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PlanetsProvider;\n","import React from 'react';\nimport './App.css';\nimport DataFilters from './components/filters/DataFilters';\nimport FiltersInUse from './components/filters/FiltersInUse';\nimport DataTable from './components/table/DataTable';\nimport PlanetsProvider from './context/PlanetsProvider';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <DataFilters />\n      <FiltersInUse />\n      <DataTable />\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}